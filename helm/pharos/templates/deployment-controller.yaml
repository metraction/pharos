apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pharos-controller
  name: pharos-controller
spec:
  replicas: {{ .Values.controller.replicas }}
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: pharos-controller
  strategy: {}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: pharos-controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-db
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.postgres.enabled }}
          args: ["http", "--init", "--config", "/config/.pharos.yaml", "--database.dsn", "postgres://$(PHAROS_DATABASE_USERNAME):$(PHAROS_DATABASE_PASSWORD)@{{ include "pharos.fullname" . }}-postgres:5432/$(PHAROS_DATABASE)?sslmode=disable", "--database.driver", "postgres"]
          {{- else }}
          args: ["http", "--init", "--config", "/config/.pharos.yaml", "--database.dsn", "$(PHAROS_DATABASE_DSN)", "--database.driver", "postgres"]
          {{- end }}
          env:
            {{ include "pharos.dbEnvVars" . | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /config/.pharos.yaml
              subPath: .pharos.yaml
            - name: grype-db-stage
              mountPath: /tmp/grype-db-stage
      containers:
        - name: pharos-controller
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- if .Values.postgres.enabled }}
          args: ["http", "--config", "/config/.pharos.yaml", "--database.dsn", "postgres://$(PHAROS_DATABASE_USERNAME):$(PHAROS_DATABASE_PASSWORD)@{{ include "pharos.fullname" . }}-postgres:5432/$(PHAROS_DATABASE)?sslmode=disable", "--database.driver", "postgres"]
          {{- else }}
          args: ["http", "--config", "/config/.pharos.yaml", "--database.dsn", "$(PHAROS_DATABASE_DSN)", "--database.driver", "postgres"]
          {{- end }}
          livenessProbe:
            httpGet:
              path: /api/v1/metrics/liveness
              port: 8080
              httpHeaders:
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/metrics/readiness
              port: 8080
              httpHeaders:
            failureThreshold: 1
            periodSeconds: 10
          env:
            {{ include "pharos.dbEnvVars" . | indent 12 }}
            - name: PHAROS_COLLECTOR_QUEUESIZE
              value: "{{ .Values.controller.collector.queueSize }}"
            - name: PHAROS_PUBLISHER_QUEUESIZE
              value: "{{ .Values.controller.publisher.queueSize }}"
            - name: APP_DATA_PATH
              value: "/pharos"
            {{- with .Values.enrichers }}
            - name: PHAROS_ENRICHERCOMMON_ENRICHERPATH
              value: "/pharos/enrichers/enrichers.yaml"
            {{- end }}
            - name: PHAROS_ENRICHERCOMMON_UIURL
              value: "{{ .Values.enrichers.uiUrl }}"
          {{- with .Values.controller.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /config/.pharos.yaml
              subPath: .pharos.yaml
            - name: enrichers-volume
              mountPath: /pharos/enrichers
            - name: grype-db-stage
              mountPath: /tmp/grype-db-stage
      volumes:
        - name: config-volume
          configMap:
            name: pharos-config
        - name: enrichers-volume
          configMap:
            name: {{ .Values.enrichers.configMap }}
        - name: grype-db-stage
          emptyDir: {}
