{{ if .Values.postgres.enabled }}
{{- $fullname := include "pharos.postgres.fullname" . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "pharos.postgres.labels" . | nindent 4 }}
    {{- with .Values.customLabels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.customAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  {{- if .Values.revisionHistoryLimit }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- end }}
  serviceName: {{ $fullname }}
  podManagementPolicy: {{ .Values.postgres.podManagementPolicy }}
  updateStrategy: 
    type: {{ .Values.postgres.updateStrategyType }}
  selector:
    matchLabels:
      {{- include "pharos.postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/scripts: {{ include (print $.Template.BasePath "/postgres-scripts.yaml") . | sha256sum }}
      {{- with .Values.postgres.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pharos.postgres.selectorLabels" . | nindent 8 }}
      {{- with .Values.postgres.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.postgres.priorityClassName }}
      priorityClassName: {{ .Values.postgres.priorityClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pharos.postgres.serviceAccountName" . }}
      {{- with .Values.postgres.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-postgres-init
          {{- with .Values.postgres.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.postgres.image.registry }}/{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          volumeMounts:
            - mountPath: /initscripts
              name: initscripts
            - mountPath: /scripts
              name: scripts
            - mountPath: /configs
              name: configs
          command: [ "/initscripts/init.sh" ]
          {{- with .Values.initResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }} 
      containers:
        - name: {{ .Chart.Name }}-postgres
          {{- with .Values.postgres.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.postgres.image.registry }}/{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: USERDB_USER
              value: {{ .Values.postgres.auth.username }}
            - name: USERDB_DATABASE
              value: {{ .Values.postgres.auth.database }}
            {{- if .Values.postgres.auth.existingSecret }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.auth.existingSecret }}
                  key: {{ .Values.postgres.auth.secretKeys.adminPasswordKey }}
            - name: USERDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.auth.existingSecret }}
                  key: {{ default "USERDB_PASSWORD" .password.secretKey }}
            {{- else }}
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.auth.postgresPassword }}"
            - name: USERDB_PASSWORD
              value: "{{ .Values.postgres.auth.password }}"
            {{- end }}
            - name: PGDATA
              value: {{ printf "%s/%s" .Values.postgres.dataDir .Values.postgres.pgDir | quote }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.postgres.startupProbe.enabled }}
          startupProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -h localhost
          {{- with .Values.postgres.startupProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- if .Values.postgres.livenessProbe.enabled }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -h localhost
          {{- with .Values.postgres.livenessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- if .Values.postgres.readinessProbe.enabled }}
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -h localhost
          {{- with .Values.postgres.readinessProbe }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            successThreshold: {{ .successThreshold }}
            periodSeconds: {{ .periodSeconds }}                
          {{- end }}
          {{- end }}
          {{- with .Values.postgres.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- range .Values.args }}
            - {{ . }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/run
              name: run
            - mountPath: /tmp
              name: tmp
            - mountPath: {{ .Values.postgres.dataDir }}
              name: {{ .Values.postgres.storage.volumeName }}
            - mountPath: /docker-entrypoint-initdb.d
              name: scripts
            - mountPath: /etc/postgresql
              name: configs
      {{- with .Values.extraContainers }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: scripts
          emptyDir: {}
        - name: configs
          emptyDir: {}
        - name: initscripts
          configMap:
            name: {{ $fullname }}-scripts
            defaultMode: 0555
{{- with .Values.postgres.storage }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .volumeName }}
      {{- with .labels }}
        labels:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .annotations }}
        annotations:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      spec:
        {{- with .accessModes }}
        accessModes:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .className }}
        storageClassName: {{ .className }}
        {{- end }}
        resources:
          requests:
            storage: {{ .requestedSize }}
{{- end }}
{{- end }}
